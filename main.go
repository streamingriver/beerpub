package main

import (
	"log"
	"net/http"
	"os"
	"strings"
)

type AutoGenerated struct {
	Subject string `json:"subject"`
	Links   []struct {
		Rel  string `json:"rel"`
		Href string `json:"href"`
		Type string `json:"type,omitempty"`
	} `json:"links"`
}

func main() {
	http.HandleFunc("/.well-known/webfinger", func(w http.ResponseWriter, r *http.Request) {
		resource := r.URL.Query().Get("resource")
		parts := strings.SplitN(resource, ":", 2)
		_ = parts
		user := parts[1]
		host := os.Getenv("APP_HOST")
		w.Header().Set("Content-Type", "application/jrd+json")
		w.Write([]byte(`{
			"subject": "` + resource + `",
			"links": [
				{
					"rel": "https://joindiaspora.com/seed_location",
					"type": "text/html",
					"href": "` + host + `/u/` + user + `"
				},
				{
					"rel": "http://webfinger.net/rel/profile-page",
					"type": "text/html",
					"href": "` + host + `/u/` + user + `"
				}
			]
			}`,
		))
	})
	log.Fatal(http.ListenAndServe(os.Getenv("APP_BIND"), nil))
}
